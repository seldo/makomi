/**
 * Helper functions that makomi-express uses to extend Handlebars.
 * Runtime should not parse HTML at runtime.
 * Runtime should use handlebars features as much as possible for efficiency.
 */

var fs = require('fs'),
    hb = require('handlebars'),
    _ = require('underscore');

exports.templateRoot = process.cwd() + '/views/'
exports.templateExtension = '.hbs'

exports.renderFragment = function(source,context) {

  hb.registerHelper('Recurse',function(children) {
    var template = hb.compile(source);
    return template(children);
  });

  var template = hb.compile(source);
  return template(context)
}

exports.compile = function(layout,cb) {

  console.log("Compiling " + layout.source)

  // render the full view via handlebars -- but not yet
  var renderView = function(file,context,cb) {
    var templateFile = exports.templateRoot + file + exports.templateExtension
    console.log("Rendering template " + templateFile)
    fs.readFile(templateFile,'utf-8',function(er,data) {
      var renderedView = exports.renderFragment(data,context)
      cb(renderedView)
    })
  }

  // compile all children first, recursively
  if(layout.templates) {

    var templateCount = Object.keys(layout.templates).length
    var templateHandled = function() {
      templateCount--;
      if (templateCount == 0) {
        renderView(layout.source,layout.context,cb)
      }
    }

    for(var t in layout.templates) {

      if (layout.context) {
        // merge parent context into child
        for (var p in layout.context) {
          if (!layout.templates[t].context[p]) {
            layout.templates[t].context[p] = layout.context[p]
          }
        }
      } else {
        layout.context = {}
      }

      // compile child and spit result into string
      exports.compile(layout.templates[t],function(renderedView) {
        layout.context[t] = renderedView;
        templateHandled()
      })
    }
  } else {
    // if no kids, go straight to rendering
    renderView(layout.source,layout.context,cb)
  }

}