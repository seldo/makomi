{
  "author": {
    "name": "Eric Allam",
    "email": "rubymaverick@gmail.com"
  },
  "name": "express-mock-request",
  "description": "A Mock Request object to use when testing an express app",
  "version": "0.0.2",
  "homepage": "https://github.com/rubymaverick/express-mock-request",
  "repository": {
    "url": "https://github.com/rubymaverick/express-mock-request"
  },
  "dependencies": {
    "express": "https://github.com/visionmedia/express/tarball/master"
  },
  "devDependencies": {
    "nodeunit": "0.7.4"
  },
  "optionalDependencies": {},
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "test": "nodeunit test/*_test.js"
  },
  "main": "index",
  "readme": "### express-mock-request\n\nexpress-mock-request is a utility function to make it easy to write tests for Node.JS [Express](https://github.com/visionmedia/express) applications.\nIn fact, it was extracted from the Express test-suite [here](https://github.com/visionmedia/express/blob/master/test/support/http.js).  I \nwanted to use it in my own application and I so I extracted it into this module and removed the [mocha](https://github.com/visionmedia/mocha) specific testing code.\n\n#### How to use:\n\nFirst, install using npm:\n\n    npm install express-mock-request\n\nThen require it in your test file like so:\n\n```javascript\nvar request = require('express-mock-request');\n```\n\nLet's say you want to test this simple express app to make sure it returns the proper status, body, and headers:\n\n```javascript\nvar express = require('express')\nvar app = module.exports = express();\n\napp.get('/', function(req, res) {\n  res.send(\"ok\", {'Content-Type': 'text/html'}, 200);\n});\n\n// Only start listening on 8080 when this file is run directly i.e.: node app.js\nif(!module.parent) {\n  app.listen(8080);\n}\n```\n\nYou could write your test like so:\n\n```javascript\nvar request = require('express-mock-request');\n// require the express application, notice how we exported the express app using `module.exports` above\nvar app = require('../app');\n\n// This example uses nodeunit\nexports.testGet = function(test){\n  request(app).get('/').expect(function(response) {\n    // response is the response from hitting '/'\n    test.equal(response.body, \"ok\");\n    test.equal(response.statusCode, 200);\n    test.equal(response.headers['content-type'], \"text/html\");\n    test.done();\n  });\n}\n```\n\nYou can see more examples in the express test suite [here](https://github.com/visionmedia/express/tree/master/test/acceptance).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rubymaverick/express-mock-request/issues"
  },
  "_id": "express-mock-request@0.0.2",
  "dist": {
    "shasum": "9bc28d151430a6a31614f16bf3e8607601ecc428"
  },
  "_from": "express-mock-request@*",
  "_resolved": "https://registry.npmjs.org/express-mock-request/-/express-mock-request-0.0.2.tgz"
}
